{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NameDataService {\n  constructor() {}\n  getNames() {\n    const mockNames = ['John', 'John', 'John', 'Alice', 'Bob', 'Bob', 'Catherine', 'Catherine', 'Catherine', 'Catherine', 'David', 'David', 'Emily', 'Emily', 'Emily', 'Emily', 'Emily', 'Frank'];\n    return of(mockNames);\n  }\n  static #_ = this.ɵfac = function NameDataService_Factory(t) {\n    return new (t || NameDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NameDataService,\n    factory: NameDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","NameDataService","constructor","getNames","mockNames","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\interviewCode\\tablestyling\\src\\app\\services\\name-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NameDataService {\n\n  constructor() { }\n  getNames(): Observable<string[]> {\n    const mockNames = [\n      'John', 'John', 'John', 'Alice', 'Bob', 'Bob', 'Catherine', \n      'Catherine', 'Catherine', 'Catherine', 'David', 'David', \n      'Emily', 'Emily', 'Emily', 'Emily', 'Emily', 'Frank'\n    ];\n    return of(mockNames);\n  }\n}\n"],"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;;AAKrC,OAAM,MAAOC,eAAe;EAE1BC,YAAA,GAAgB;EAChBC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAG,CAChB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAC1D,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EACvD,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CACrD;IACD,OAAOJ,EAAE,CAACI,SAAS,CAAC;EACtB;EAAC,QAAAC,CAAA,G;qBAVUJ,eAAe;EAAA;EAAA,QAAAK,EAAA,G;WAAfL,eAAe;IAAAM,OAAA,EAAfN,eAAe,CAAAO,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}